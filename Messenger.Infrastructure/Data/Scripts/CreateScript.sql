-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public."Attachments" DROP CONSTRAINT IF EXISTS fk_attachment_message;

ALTER TABLE IF EXISTS public."Blacklist" DROP CONSTRAINT IF EXISTS fk_blocked_by;

ALTER TABLE IF EXISTS public."Blacklist" DROP CONSTRAINT IF EXISTS fk_blocked_to;

ALTER TABLE IF EXISTS public."Chat_Participants" DROP CONSTRAINT IF EXISTS fk_participant_chat;

ALTER TABLE IF EXISTS public."Chat_Participants" DROP CONSTRAINT IF EXISTS fk_participant_user;

ALTER TABLE IF EXISTS public."Chats" DROP CONSTRAINT IF EXISTS fk_chat_creator;

ALTER TABLE IF EXISTS public."Logins" DROP CONSTRAINT IF EXISTS fk_login_user;

ALTER TABLE IF EXISTS public."Message_Statuses" DROP CONSTRAINT IF EXISTS fk_status_message;

ALTER TABLE IF EXISTS public."Message_Statuses" DROP CONSTRAINT IF EXISTS fk_status_user2;

ALTER TABLE IF EXISTS public."Messages" DROP CONSTRAINT IF EXISTS fk_chat_messages;

ALTER TABLE IF EXISTS public."Messages" DROP CONSTRAINT IF EXISTS fk_recipient;

ALTER TABLE IF EXISTS public."Messages" DROP CONSTRAINT IF EXISTS fk_sender;

ALTER TABLE IF EXISTS public."Notifications" DROP CONSTRAINT IF EXISTS fk_notification_user;

ALTER TABLE IF EXISTS public."Reactions" DROP CONSTRAINT IF EXISTS fk_reaction_message;

ALTER TABLE IF EXISTS public."Reactions" DROP CONSTRAINT IF EXISTS fk_reaction_user;

ALTER TABLE IF EXISTS public."User_Statuses" DROP CONSTRAINT IF EXISTS fk_status_user;

ALTER TABLE IF EXISTS public."Users" DROP CONSTRAINT IF EXISTS fk_account;

ALTER TABLE IF EXISTS public."User_Roles" DROP CONSTRAINT IF EXISTS fk_userrole_user;

ALTER TABLE IF EXISTS public."User_Roles" DROP CONSTRAINT IF EXISTS fk_userrole_role;



DROP TABLE IF EXISTS public."Account_Settings";

CREATE TABLE IF NOT EXISTS public."Account_Settings"
(
    "Setting_ID" uuid NOT NULL,
    "Account_ID" uuid NOT NULL,
    "Avatar" text,
    "Theme" character varying(15),
    CONSTRAINT "Account_Settings_pkey" PRIMARY KEY ("Setting_ID"),
    CONSTRAINT "Account_Settings_Account_ID_key" UNIQUE ("Account_ID")
);

DROP TABLE IF EXISTS public."Attachments";

CREATE TABLE IF NOT EXISTS public."Attachments"
(
    "Attachment_ID" uuid NOT NULL,
    "Message_ID" uuid NOT NULL,
    "File_Name" character varying(255) NOT NULL,
    "File_Type" character varying(100),
    "Size_in_Bytes" integer,
    "URL" text NOT NULL,
    CONSTRAINT "Attachments_pkey" PRIMARY KEY ("Attachment_ID")
);

DROP TABLE IF EXISTS public."Blacklist";

CREATE TABLE IF NOT EXISTS public."Blacklist"
(
    "User_ID" uuid NOT NULL,
    "Blocked_User_ID" uuid NOT NULL,
    "Block_Date" timestamp without time zone DEFAULT now(),
    CONSTRAINT "Blacklist_pkey" PRIMARY KEY ("User_ID", "Blocked_User_ID")
);

DROP TABLE IF EXISTS public."Chat_Participants";

CREATE TABLE IF NOT EXISTS public."Chat_Participants"
(
    "Chat_ID" uuid NOT NULL,
    "User_ID" uuid NOT NULL,
    "Role" character varying(20) DEFAULT 'participant'::character varying,
    "Join_Date" timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT "Chat_Participants_pkey" PRIMARY KEY ("Chat_ID", "User_ID")
);

DROP TABLE IF EXISTS public."Chats";

CREATE TABLE IF NOT EXISTS public."Chats"
(
    "Chat_ID" uuid NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Type" character varying(20) NOT NULL,
    "User_ID" uuid NOT NULL,
    "Creation_Date" timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT "Chats_pkey" PRIMARY KEY ("Chat_ID")
);

DROP TABLE IF EXISTS public."Logins";

CREATE TABLE IF NOT EXISTS public."Logins"
(
    "Login_ID" uuid NOT NULL,
    "User_ID" uuid NOT NULL,
    "Token" character varying(100) NOT NULL,
    "IP_Address" character varying(15) NOT NULL,
    "Login_Time" timestamp without time zone NOT NULL,
    "Logout_Time" timestamp without time zone,
    "Active" boolean NOT NULL,
    CONSTRAINT "Logins_pkey" PRIMARY KEY ("Login_ID")
);

DROP TABLE IF EXISTS public."Message_Statuses";

CREATE TABLE IF NOT EXISTS public."Message_Statuses"
(
    "Message_ID" uuid NOT NULL,
    "User_ID" uuid NOT NULL,
    "Status" character varying(20) NOT NULL,
    "Change_Date" timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT "Message_Statuses_pkey" PRIMARY KEY ("Message_ID", "User_ID")
);

DROP TABLE IF EXISTS public."Messages";

CREATE TABLE IF NOT EXISTS public."Messages"
(
    "Message_ID" uuid NOT NULL,
    "Sender_ID" uuid NOT NULL,
    "Recipient_ID" uuid NOT NULL,
    "Chat_ID" uuid NOT NULL,
    "Message_Text" text COLLATE pg_catalog."default" NOT NULL,
    "Has_Attachments" boolean NOT NULL,
    "Send_Time" timestamp without time zone NOT NULL,
    CONSTRAINT "Messages_pkey" PRIMARY KEY ("Message_ID")
);

DROP TABLE IF EXISTS public."Notifications";

CREATE TABLE IF NOT EXISTS public."Notifications"
(
    "Notification_ID" uuid NOT NULL,
    "User_ID" uuid NOT NULL,
    "Text" text COLLATE pg_catalog."default" NOT NULL,
    "Creation_Date" timestamp without time zone NOT NULL DEFAULT now(),
    "Read" boolean NOT NULL DEFAULT false,
    CONSTRAINT "Notifications_pkey" PRIMARY KEY ("Notification_ID")
);

DROP TABLE IF EXISTS public."Reactions";

CREATE TABLE IF NOT EXISTS public."Reactions"
(
    "Reaction_ID" uuid NOT NULL,
    "Message_ID" uuid NOT NULL,
    "User_ID" uuid NOT NULL,
    "Reaction_Type" character varying(30) NOT NULL,
    CONSTRAINT "Reactions_pkey" PRIMARY KEY ("Reaction_ID")
);

DROP TABLE IF EXISTS public."User_Statuses";

CREATE TABLE IF NOT EXISTS public."User_Statuses"
(
    "User_ID" uuid NOT NULL,
    "Online" boolean NOT NULL,
    "Last_Activity" timestamp without time zone,
    CONSTRAINT "User_Statuses_pkey" PRIMARY KEY ("User_ID")
);

DROP TABLE IF EXISTS public."Users";

CREATE TABLE IF NOT EXISTS public."Users"
(
    "User_ID" uuid NOT NULL,
    "Account_ID" uuid NOT NULL,
    "Last_Name" character varying(50) NOT NULL,
    "First_Name" character varying(50) NOT NULL,
    "Middle_Name" character varying(50),
    "Birth_Date" date NOT NULL,
    "Registration_Date" date NOT NULL,
    "Login" character varying(50) NOT NULL,
    "Password" character varying(255) NOT NULL,
    "Phone" character(18) NOT NULL,
    CONSTRAINT "Users_pkey" PRIMARY KEY ("User_ID")
);

DROP TABLE IF EXISTS public."Roles";

CREATE TABLE IF NOT EXISTS public."Roles"
(
    "Role_ID" uuid,
    "Name" character varying(50) NOT NULL,
    "Description" text NOT NULL,
    CONSTRAINT "Roles_pkey" PRIMARY KEY ("Role_ID")
);

DROP TABLE IF EXISTS public."User_Roles";

CREATE TABLE IF NOT EXISTS public."User_Roles"
(
    "User_ID" uuid,
    "Role_ID" uuid,
    CONSTRAINT "UserRoles_pkey" PRIMARY KEY ("User_ID", "Role_ID")
);

ALTER TABLE IF EXISTS public."Attachments"
    ADD CONSTRAINT fk_attachment_message FOREIGN KEY ("Message_ID")
    REFERENCES public."Messages" ("Message_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Blacklist"
    ADD CONSTRAINT fk_blocked_by FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Blacklist"
    ADD CONSTRAINT fk_blocked_to FOREIGN KEY ("Blocked_User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Chat_Participants"
    ADD CONSTRAINT fk_participant_chat FOREIGN KEY ("Chat_ID")
    REFERENCES public."Chats" ("Chat_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Chat_Participants"
    ADD CONSTRAINT fk_participant_user FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Chats"
    ADD CONSTRAINT fk_chat_creator FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Logins"
    ADD CONSTRAINT fk_login_user FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Message_Statuses"
    ADD CONSTRAINT fk_status_message FOREIGN KEY ("Message_ID")
    REFERENCES public."Messages" ("Message_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Message_Statuses"
    ADD CONSTRAINT fk_status_user2 FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Messages"
    ADD CONSTRAINT fk_chat_messages FOREIGN KEY ("Chat_ID")
    REFERENCES public."Chats" ("Chat_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Messages"
    ADD CONSTRAINT fk_recipient FOREIGN KEY ("Recipient_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Messages"
    ADD CONSTRAINT fk_sender FOREIGN KEY ("Sender_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Notifications"
    ADD CONSTRAINT fk_notification_user FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Reactions"
    ADD CONSTRAINT fk_reaction_message FOREIGN KEY ("Message_ID")
    REFERENCES public."Messages" ("Message_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Reactions"
    ADD CONSTRAINT fk_reaction_user FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."User_Statuses"
    ADD CONSTRAINT fk_status_user FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "User_Statuses_pkey"
    ON public."User_Statuses"("User_ID");


ALTER TABLE IF EXISTS public."Users"
    ADD CONSTRAINT fk_account FOREIGN KEY ("Account_ID")
    REFERENCES public."Account_Settings" ("Account_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."User_Roles"
    ADD CONSTRAINT fk_userrole_user FOREIGN KEY ("User_ID")
    REFERENCES public."Users" ("User_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."User_Roles"
    ADD CONSTRAINT fk_userrole_role FOREIGN KEY ("Role_ID")
    REFERENCES public."Roles" ("Role_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;